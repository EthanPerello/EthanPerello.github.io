{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const mainProjects=[{title:\"NYC School Closures Prediction\",image:\"placeholder-image-url\",description:`\nIn this data science project, I analyzed student outcome data and school closures in New York City. I gathered data from public sources including the NYC Department of Education, focusing on metrics such as graduation rates, dropout percentages, and GED attainment across racial, gender, and socioeconomic subgroups.\n\nI discovered stark disparities in student performance and identified dropout rates among male and Black students as strong indicators of school closures. I built a logistic regression model with 99.1% accuracy using 2015 data and applied it to 2021 schools to identify potential at-risk closures. This project demonstrated the impact of predictive modeling in education policy, showing that while student outcomes provide valuable insight, closures are also influenced by budget, charter transitions, and administrative decisions.\n    `,github:\"https://github.com/yourusername/nyc-closures\"},{title:\"March Madness Predictor\",image:\"placeholder-image-url\",description:`\nThis project involved building machine learning models to predict NCAA March Madness tournament outcomes. I collected data from past seasons, including team ratings (KenPom, FiveThirtyEight), seedings, and even scraped betting odds for extra context.\n\nI engineered features like seed difference, win percentage, average margin of victory, and betting line movement. I trained and validated logistic regression and XGBoost models using season-by-season cross-validation. My top model—an XGBoost classifier with betting odds and power rankings—achieved strong log-loss performance and reflected real-world predictive patterns. This project taught me feature engineering, ensemble modeling, and the value of external signals like market sentiment in sports prediction.\n    `,github:\"https://github.com/yourusername/march-madness\"},{title:\"City Builder Game (Dojo)\",image:\"placeholder-image-url\",description:`\nA blockchain-integrated multiplayer city-building game developed in Unity and powered by the Dojo engine. Players manage in-game currency, purchase land tiles on a dynamically expanding grid, and construct residential, industrial, and commercial buildings.\n\nEach tile has its own internal build grid, and structures affect resident happiness and income rates. Players compete for profitability and tile control in a persistent online world. All game data—including player balance, tile ownership, building states—is recorded on-chain using Dojo and Starknet. Includes full camera controls, building menus, real-time economy simulation, and an interactive leaderboard.\n    `,github:\"https://github.com/yourusername/city-builder\"},{title:\"Space Game\",image:\"placeholder-image-url\",description:`\nA 3D action-adventure game made in Unity for Harvard's edX Game Development course. Features real-time combat, AI-driven enemies, gem collection, health bars, game state transitions, and UI integration.\n\nPlayers explore a space-themed map, collect items, and destroy enemies while navigating through multiple game scenes like menus, win/game-over screens. Enemies use Unity's NavMesh AI to wander and attack the player. Built with animator triggers, collider logic, sound effects, and persistent music systems.\n    `},{title:\"Medieval Fantasy RPG\",image:\"placeholder-image-url\",description:`\nA fully featured Unity RPG game with Blender-crafted characters, AI combat, leveling system, quest tracking, and customizable character appearance. Players battle goblins and skeletons, gain experience, upgrade stats, and accept quests from NPCs.\n\nIncludes ranged and melee combat, persistent object states, pet companions, inventory/equipment system, and a dynamic UI that updates in real time. Game logic is modular and scalable for future expansion (bosses, new zones, advanced items). Demonstrates game design, AI architecture, and C# systems integration.\n    `}];const miniProjects=[{title:\"3D Helicopter Side-Scroller\",image:\"placeholder-helicopter\",description:\"Unity 3D game where players fly a helicopter through scrolling terrain, dodging obstacles in a fast-paced environment.\"},{title:\"Simplified Pokémon (LÖVE2D)\",image:\"placeholder-pokemon\",description:\"Turn-based RPG inspired by Pokémon. Built using Lua and LÖVE2D with overworld navigation, battle logic, and wild encounters.\"},{title:\"Arcade Shooter Game\",image:\"placeholder-arcade\",description:\"React-based space shooter featuring blaster mechanics, asteroid collisions, multiple screens, and local high score tracking.\"},{title:\"Grid Navigation Game\",image:\"placeholder-grid\",description:\"Tile-based movement game built in React with random tile generation, name input, win/lose conditions, and simple game state logic.\"},{title:\"Election Survey App\",image:\"placeholder-election\",description:\"A React app simulating a US election survey. Users vote for candidates across multiple races and see summarized results.\"},{title:\"Dojo Engine Blockchain Game\",image:\"placeholder-dojo\",description:\"Web3 game using Dojo and Starknet. Features on-chain position tracking, player wallets, and real-time entity updates.\"}];// === Components ===\nconst ExpandableProject=_ref=>{let{project}=_ref;const[expanded,setExpanded]=useState(false);return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-2xl shadow-md p-4 flex flex-col\",children:[/*#__PURE__*/_jsx(\"img\",{src:project.image,alt:project.title,className:\"rounded-xl mb-4 object-cover h-48 w-full\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-2\",children:project.title}),/*#__PURE__*/_jsx(\"p\",{className:`text-sm text-gray-700 whitespace-pre-line mb-4 ${expanded?\"\":\"line-clamp-6\"}`,children:project.description}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setExpanded(!expanded),className:\"text-blue-600 text-sm hover:underline mb-2\",children:expanded?\"Show Less\":\"Read More\"}),project.github&&/*#__PURE__*/_jsx(\"a\",{href:project.github,className:\"text-sm bg-gray-200 px-3 py-1 rounded hover:bg-gray-300 self-start\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"GitHub\"})]});};const MiniProjectCard=_ref2=>{let{project}=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-2xl shadow-md p-4 flex flex-col\",children:[/*#__PURE__*/_jsx(\"img\",{src:project.image,alt:project.title,className:\"rounded-xl mb-4 object-cover h-40 w-full\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold mb-1\",children:project.title}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:project.description})]});};export default function App(){// Set page title\nuseEffect(()=>{document.title=\"Ethan Perello Projects\";},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 max-w-screen-xl mx-auto\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold mb-10 text-center\",children:\"Ethan Perello Projects\"}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-semibold mb-6\",children:\"Main Projects\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\",children:mainProjects.map((project,index)=>/*#__PURE__*/_jsx(ExpandableProject,{project:project},index))})]}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-semibold mb-4\",children:\"Mini Projects\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-6\",children:\"A curated selection of smaller creative and technical builds\\u2014from game development to blockchain applications\\u2014each focused, polished, and showcasing diverse skills.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\",children:miniProjects.map((project,index)=>/*#__PURE__*/_jsx(MiniProjectCard,{project:project},index))})]})]});}","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","mainProjects","title","image","description","github","miniProjects","ExpandableProject","_ref","project","expanded","setExpanded","className","children","src","alt","onClick","href","target","rel","MiniProjectCard","_ref2","App","document","map","index"],"sources":["/Users/Test/Desktop/portfolio-site/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst mainProjects = [\n  {\n    title: \"NYC School Closures Prediction\",\n    image: \"placeholder-image-url\",\n    description: `\nIn this data science project, I analyzed student outcome data and school closures in New York City. I gathered data from public sources including the NYC Department of Education, focusing on metrics such as graduation rates, dropout percentages, and GED attainment across racial, gender, and socioeconomic subgroups.\n\nI discovered stark disparities in student performance and identified dropout rates among male and Black students as strong indicators of school closures. I built a logistic regression model with 99.1% accuracy using 2015 data and applied it to 2021 schools to identify potential at-risk closures. This project demonstrated the impact of predictive modeling in education policy, showing that while student outcomes provide valuable insight, closures are also influenced by budget, charter transitions, and administrative decisions.\n    `,\n    github: \"https://github.com/yourusername/nyc-closures\",\n  },\n  {\n    title: \"March Madness Predictor\",\n    image: \"placeholder-image-url\",\n    description: `\nThis project involved building machine learning models to predict NCAA March Madness tournament outcomes. I collected data from past seasons, including team ratings (KenPom, FiveThirtyEight), seedings, and even scraped betting odds for extra context.\n\nI engineered features like seed difference, win percentage, average margin of victory, and betting line movement. I trained and validated logistic regression and XGBoost models using season-by-season cross-validation. My top model—an XGBoost classifier with betting odds and power rankings—achieved strong log-loss performance and reflected real-world predictive patterns. This project taught me feature engineering, ensemble modeling, and the value of external signals like market sentiment in sports prediction.\n    `,\n    github: \"https://github.com/yourusername/march-madness\",\n  },\n  {\n    title: \"City Builder Game (Dojo)\",\n    image: \"placeholder-image-url\",\n    description: `\nA blockchain-integrated multiplayer city-building game developed in Unity and powered by the Dojo engine. Players manage in-game currency, purchase land tiles on a dynamically expanding grid, and construct residential, industrial, and commercial buildings.\n\nEach tile has its own internal build grid, and structures affect resident happiness and income rates. Players compete for profitability and tile control in a persistent online world. All game data—including player balance, tile ownership, building states—is recorded on-chain using Dojo and Starknet. Includes full camera controls, building menus, real-time economy simulation, and an interactive leaderboard.\n    `,\n    github: \"https://github.com/yourusername/city-builder\",\n  },\n  {\n    title: \"Space Game\",\n    image: \"placeholder-image-url\",\n    description: `\nA 3D action-adventure game made in Unity for Harvard's edX Game Development course. Features real-time combat, AI-driven enemies, gem collection, health bars, game state transitions, and UI integration.\n\nPlayers explore a space-themed map, collect items, and destroy enemies while navigating through multiple game scenes like menus, win/game-over screens. Enemies use Unity's NavMesh AI to wander and attack the player. Built with animator triggers, collider logic, sound effects, and persistent music systems.\n    `,\n  },\n  {\n    title: \"Medieval Fantasy RPG\",\n    image: \"placeholder-image-url\",\n    description: `\nA fully featured Unity RPG game with Blender-crafted characters, AI combat, leveling system, quest tracking, and customizable character appearance. Players battle goblins and skeletons, gain experience, upgrade stats, and accept quests from NPCs.\n\nIncludes ranged and melee combat, persistent object states, pet companions, inventory/equipment system, and a dynamic UI that updates in real time. Game logic is modular and scalable for future expansion (bosses, new zones, advanced items). Demonstrates game design, AI architecture, and C# systems integration.\n    `,\n  },\n];\n\nconst miniProjects = [\n  {\n    title: \"3D Helicopter Side-Scroller\",\n    image: \"placeholder-helicopter\",\n    description:\n      \"Unity 3D game where players fly a helicopter through scrolling terrain, dodging obstacles in a fast-paced environment.\",\n  },\n  {\n    title: \"Simplified Pokémon (LÖVE2D)\",\n    image: \"placeholder-pokemon\",\n    description:\n      \"Turn-based RPG inspired by Pokémon. Built using Lua and LÖVE2D with overworld navigation, battle logic, and wild encounters.\",\n  },\n  {\n    title: \"Arcade Shooter Game\",\n    image: \"placeholder-arcade\",\n    description:\n      \"React-based space shooter featuring blaster mechanics, asteroid collisions, multiple screens, and local high score tracking.\",\n  },\n  {\n    title: \"Grid Navigation Game\",\n    image: \"placeholder-grid\",\n    description:\n      \"Tile-based movement game built in React with random tile generation, name input, win/lose conditions, and simple game state logic.\",\n  },\n  {\n    title: \"Election Survey App\",\n    image: \"placeholder-election\",\n    description:\n      \"A React app simulating a US election survey. Users vote for candidates across multiple races and see summarized results.\",\n  },\n  {\n    title: \"Dojo Engine Blockchain Game\",\n    image: \"placeholder-dojo\",\n    description:\n      \"Web3 game using Dojo and Starknet. Features on-chain position tracking, player wallets, and real-time entity updates.\",\n  },\n];\n\n// === Components ===\n\nconst ExpandableProject = ({ project }) => {\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <div className=\"bg-white rounded-2xl shadow-md p-4 flex flex-col\">\n      <img\n        src={project.image}\n        alt={project.title}\n        className=\"rounded-xl mb-4 object-cover h-48 w-full\"\n      />\n      <h2 className=\"text-xl font-semibold mb-2\">{project.title}</h2>\n      <p\n        className={`text-sm text-gray-700 whitespace-pre-line mb-4 ${\n          expanded ? \"\" : \"line-clamp-6\"\n        }`}\n      >\n        {project.description}\n      </p>\n      <button\n        onClick={() => setExpanded(!expanded)}\n        className=\"text-blue-600 text-sm hover:underline mb-2\"\n      >\n        {expanded ? \"Show Less\" : \"Read More\"}\n      </button>\n      {project.github && (\n        <a\n          href={project.github}\n          className=\"text-sm bg-gray-200 px-3 py-1 rounded hover:bg-gray-300 self-start\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          GitHub\n        </a>\n      )}\n    </div>\n  );\n};\n\nconst MiniProjectCard = ({ project }) => (\n  <div className=\"bg-white rounded-2xl shadow-md p-4 flex flex-col\">\n    <img\n      src={project.image}\n      alt={project.title}\n      className=\"rounded-xl mb-4 object-cover h-40 w-full\"\n    />\n    <h2 className=\"text-lg font-semibold mb-1\">{project.title}</h2>\n    <p className=\"text-sm text-gray-600\">{project.description}</p>\n  </div>\n);\n\nexport default function App() {\n  // Set page title\n  useEffect(() => {\n    document.title = \"Ethan Perello Projects\";\n  }, []);\n\n  return (\n    <div className=\"p-4 max-w-screen-xl mx-auto\">\n      <h1 className=\"text-4xl font-bold mb-10 text-center\">Ethan Perello Projects</h1>\n\n      {/* === Main Projects === */}\n      <section>\n        <h2 className=\"text-2xl font-semibold mb-6\">Main Projects</h2>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\">\n          {mainProjects.map((project, index) => (\n            <ExpandableProject key={index} project={project} />\n          ))}\n        </div>\n      </section>\n\n      {/* === Mini Projects === */}\n      <section>\n        <h2 className=\"text-2xl font-semibold mb-4\">Mini Projects</h2>\n        <p className=\"text-gray-600 mb-6\">\n          A curated selection of smaller creative and technical builds—from game development to blockchain applications—each focused, polished, and showcasing diverse skills.\n        </p>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {miniProjects.map((project, index) => (\n            <MiniProjectCard key={index} project={project} />\n          ))}\n        </div>\n      </section>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}