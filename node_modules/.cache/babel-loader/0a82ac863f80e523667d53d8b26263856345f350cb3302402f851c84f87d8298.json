{"ast":null,"code":"import React,{useState}from\"react\";// MAIN PROJECTS (detailed with expand/collapse)\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const mainProjects=[{title:\"NYC School Closures Prediction\",image:\"placeholder-image-url\",description:`\nIn this data science project, I analyzed student outcome data and school closures in New York City. I gathered data from public sources including the NYC Department of Education, focusing on metrics such as graduation rates, dropout percentages, and GED attainment across racial, gender, and socioeconomic subgroups.\n\nI discovered stark disparities in student performance and identified dropout rates among male and Black students as strong indicators of school closures. I built a logistic regression model with 99.1% accuracy using 2015 data and applied it to 2021 schools to identify potential at-risk closures. This project demonstrated the impact of predictive modeling in education policy, showing that while student outcomes provide valuable insight, closures are also influenced by budget, charter transitions, and administrative decisions.\n    `,github:\"https://github.com/yourusername/nyc-closures\"},{title:\"March Madness Predictor\",image:\"placeholder-image-url\",description:`\nThis project involved building machine learning models to predict NCAA March Madness tournament outcomes. I collected data from past seasons, including team ratings (KenPom, FiveThirtyEight), seedings, and even scraped betting odds for extra context.\n\nI engineered features like seed difference, win percentage, average margin of victory, and betting line movement. I trained and validated logistic regression and XGBoost models using season-by-season cross-validation. My top model—an XGBoost classifier with betting odds and power rankings—achieved strong log-loss performance and reflected real-world predictive patterns. This project taught me feature engineering, ensemble modeling, and the value of external signals like market sentiment in sports prediction.\n    `,github:\"https://github.com/yourusername/march-madness\"},{title:\"City Builder Game (Dojo)\",image:\"placeholder-image-url\",description:`\nA blockchain-integrated multiplayer city-building game developed in Unity and powered by the Dojo engine. Players manage in-game currency, purchase land tiles on a dynamically expanding grid, and construct residential, industrial, and commercial buildings.\n\nEach tile has its own internal build grid, and structures affect resident happiness and income rates. Players compete for profitability and tile control in a persistent online world. All game data—including player balance, tile ownership, building states—is recorded on-chain using Dojo and Starknet. Includes full camera controls, building menus, real-time economy simulation, and an interactive leaderboard.\n    `,github:\"https://github.com/yourusername/city-builder\"},{title:\"Space Game\",image:\"placeholder-image-url\",description:`\nA 3D action-adventure game made in Unity for Harvard's edX Game Development course. Features real-time combat, AI-driven enemies, gem collection, health bars, game state transitions, and UI integration.\n\nPlayers explore a space-themed map, collect items, and destroy enemies while navigating through multiple game scenes like menus, win/game-over screens. Enemies use Unity's NavMesh AI to wander and attack the player. Built with animator triggers, collider logic, sound effects, and persistent music systems.\n    `},{title:\"Medieval Fantasy RPG\",image:\"placeholder-image-url\",description:`\nA fully featured Unity RPG game with Blender-crafted characters, AI combat, leveling system, quest tracking, and customizable character appearance. Players battle goblins and skeletons, gain experience, upgrade stats, and accept quests from NPCs.\n\nIncludes ranged and melee combat, persistent object states, pet companions, inventory/equipment system, and a dynamic UI that updates in real time. Game logic is modular and scalable for future expansion (bosses, new zones, advanced items). Demonstrates game design, AI architecture, and C# systems integration.\n    `}];// MINI PROJECTS\nconst miniGameProjects=[{title:\"3D Helicopter Side-Scroller\",image:\"placeholder-helicopter\",description:\"Unity 3D side-scroller where players pilot a helicopter, dodge enemies, and survive scrolling terrain.\"},{title:\"Simplified Pokémon\",image:\"placeholder-pokemon\",description:\"Turn-based RPG built in Lua/LÖVE2D, inspired by early Pokémon mechanics including wild encounters and map traversal.\"},{title:\"Retro Game Pack\",image:\"placeholder-retro\",description:\"Collection of simplified classics using Lua/LÖVE2D: Mario, Zelda, Angry Birds, Pong, Match-3, Breakout, and more.\"},{title:\"Arcade Shooter\",image:\"placeholder-arcade\",description:\"Space shooter game with blaster mechanics, asteroid collision, and local storage high scores.\"},{title:\"Grid Navigation Game\",image:\"placeholder-grid\",description:\"Tile-based movement game with win/lose conditions and timed random tile spawns.\"},{title:\"Platformer Collectathon\",image:\"placeholder-platformer\",description:\"Arrow-key controlled platformer with score-boosting collectibles and enemies.\"}];const miniWebApps=[{title:\"User Management System\",image:\"placeholder-user\",description:\"React app using React Query for real-time user listing, form validation, and toast notifications.\"},{title:\"Election Survey App\",image:\"placeholder-election\",description:\"Survey app for simulating U.S. election votes. Users select candidates, submit, and view results.\"},{title:\"Restaurant Website\",image:\"placeholder-food\",description:\"Multi-page responsive site with menus, nutrition info, contact form, and location details.\"}];const miniWeb3Projects=[{title:\"Dojo Engine Game\",image:\"placeholder-dojo\",description:\"Blockchain-based game using Dojo + Starknet. Movement, wallet integration, and on-chain position updates.\"},{title:\"Web3 Auth App\",image:\"placeholder-auth\",description:\"Simple DApp with account creation, login, and protected route display inside a mock game interface.\"}];const ExpandableProject=_ref=>{let{project}=_ref;const[expanded,setExpanded]=useState(false);return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-2xl shadow-md p-4 flex flex-col\",children:[/*#__PURE__*/_jsx(\"img\",{src:project.image,alt:project.title,className:\"rounded-xl mb-4 object-cover h-48 w-full\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-2\",children:project.title}),/*#__PURE__*/_jsx(\"p\",{className:`text-sm text-gray-700 whitespace-pre-line mb-4 ${expanded?\"\":\"line-clamp-6\"}`,children:project.description}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setExpanded(!expanded),className:\"text-blue-600 text-sm hover:underline mb-2\",children:expanded?\"Show Less\":\"Read More\"}),project.github&&/*#__PURE__*/_jsx(\"a\",{href:project.github,className:\"text-sm bg-gray-200 px-3 py-1 rounded hover:bg-gray-300 self-start\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"GitHub\"})]});};const MiniProjectCard=_ref2=>{let{project}=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-2xl shadow-md p-4 flex flex-col\",children:[/*#__PURE__*/_jsx(\"img\",{src:project.image,alt:project.title,className:\"rounded-xl mb-4 object-cover h-40 w-full\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold mb-1\",children:project.title}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:project.description})]});};export default function ProjectsPage(){return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 max-w-screen-xl mx-auto\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold mb-10 text-center\",children:\"Projects\"}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-semibold mb-6\",children:\"Main Projects\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\",children:mainProjects.map((project,index)=>/*#__PURE__*/_jsx(ExpandableProject,{project:project},index))})]}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-semibold mb-4\",children:\"Mini Projects\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-6\",children:\"A mix of smaller creative experiments and focused technical builds across game dev, frontend, and blockchain.\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold mb-4\",children:\"\\uD83C\\uDFAE Game Development\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 mb-10\",children:miniGameProjects.map((project,i)=>/*#__PURE__*/_jsx(MiniProjectCard,{project:project},i))}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold mb-4\",children:\"\\uD83D\\uDCBB Web Applications\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 mb-10\",children:miniWebApps.map((project,i)=>/*#__PURE__*/_jsx(MiniProjectCard,{project:project},i))}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold mb-4\",children:\"\\uD83D\\uDD17 Blockchain & Web3\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\",children:miniWeb3Projects.map((project,i)=>/*#__PURE__*/_jsx(MiniProjectCard,{project:project},i))})]})]});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","mainProjects","title","image","description","github","miniGameProjects","miniWebApps","miniWeb3Projects","ExpandableProject","_ref","project","expanded","setExpanded","className","children","src","alt","onClick","href","target","rel","MiniProjectCard","_ref2","ProjectsPage","map","index","i"],"sources":["/Users/Test/Desktop/portfolio-site/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n// MAIN PROJECTS (detailed with expand/collapse)\nconst mainProjects = [\n  {\n    title: \"NYC School Closures Prediction\",\n    image: \"placeholder-image-url\",\n    description: `\nIn this data science project, I analyzed student outcome data and school closures in New York City. I gathered data from public sources including the NYC Department of Education, focusing on metrics such as graduation rates, dropout percentages, and GED attainment across racial, gender, and socioeconomic subgroups.\n\nI discovered stark disparities in student performance and identified dropout rates among male and Black students as strong indicators of school closures. I built a logistic regression model with 99.1% accuracy using 2015 data and applied it to 2021 schools to identify potential at-risk closures. This project demonstrated the impact of predictive modeling in education policy, showing that while student outcomes provide valuable insight, closures are also influenced by budget, charter transitions, and administrative decisions.\n    `,\n    github: \"https://github.com/yourusername/nyc-closures\",\n  },\n  {\n    title: \"March Madness Predictor\",\n    image: \"placeholder-image-url\",\n    description: `\nThis project involved building machine learning models to predict NCAA March Madness tournament outcomes. I collected data from past seasons, including team ratings (KenPom, FiveThirtyEight), seedings, and even scraped betting odds for extra context.\n\nI engineered features like seed difference, win percentage, average margin of victory, and betting line movement. I trained and validated logistic regression and XGBoost models using season-by-season cross-validation. My top model—an XGBoost classifier with betting odds and power rankings—achieved strong log-loss performance and reflected real-world predictive patterns. This project taught me feature engineering, ensemble modeling, and the value of external signals like market sentiment in sports prediction.\n    `,\n    github: \"https://github.com/yourusername/march-madness\",\n  },\n  {\n    title: \"City Builder Game (Dojo)\",\n    image: \"placeholder-image-url\",\n    description: `\nA blockchain-integrated multiplayer city-building game developed in Unity and powered by the Dojo engine. Players manage in-game currency, purchase land tiles on a dynamically expanding grid, and construct residential, industrial, and commercial buildings.\n\nEach tile has its own internal build grid, and structures affect resident happiness and income rates. Players compete for profitability and tile control in a persistent online world. All game data—including player balance, tile ownership, building states—is recorded on-chain using Dojo and Starknet. Includes full camera controls, building menus, real-time economy simulation, and an interactive leaderboard.\n    `,\n    github: \"https://github.com/yourusername/city-builder\",\n  },\n  {\n    title: \"Space Game\",\n    image: \"placeholder-image-url\",\n    description: `\nA 3D action-adventure game made in Unity for Harvard's edX Game Development course. Features real-time combat, AI-driven enemies, gem collection, health bars, game state transitions, and UI integration.\n\nPlayers explore a space-themed map, collect items, and destroy enemies while navigating through multiple game scenes like menus, win/game-over screens. Enemies use Unity's NavMesh AI to wander and attack the player. Built with animator triggers, collider logic, sound effects, and persistent music systems.\n    `,\n  },\n  {\n    title: \"Medieval Fantasy RPG\",\n    image: \"placeholder-image-url\",\n    description: `\nA fully featured Unity RPG game with Blender-crafted characters, AI combat, leveling system, quest tracking, and customizable character appearance. Players battle goblins and skeletons, gain experience, upgrade stats, and accept quests from NPCs.\n\nIncludes ranged and melee combat, persistent object states, pet companions, inventory/equipment system, and a dynamic UI that updates in real time. Game logic is modular and scalable for future expansion (bosses, new zones, advanced items). Demonstrates game design, AI architecture, and C# systems integration.\n    `,\n  },\n];\n\n// MINI PROJECTS\nconst miniGameProjects = [\n  {\n    title: \"3D Helicopter Side-Scroller\",\n    image: \"placeholder-helicopter\",\n    description:\n      \"Unity 3D side-scroller where players pilot a helicopter, dodge enemies, and survive scrolling terrain.\",\n  },\n  {\n    title: \"Simplified Pokémon\",\n    image: \"placeholder-pokemon\",\n    description:\n      \"Turn-based RPG built in Lua/LÖVE2D, inspired by early Pokémon mechanics including wild encounters and map traversal.\",\n  },\n  {\n    title: \"Retro Game Pack\",\n    image: \"placeholder-retro\",\n    description:\n      \"Collection of simplified classics using Lua/LÖVE2D: Mario, Zelda, Angry Birds, Pong, Match-3, Breakout, and more.\",\n  },\n  {\n    title: \"Arcade Shooter\",\n    image: \"placeholder-arcade\",\n    description:\n      \"Space shooter game with blaster mechanics, asteroid collision, and local storage high scores.\",\n  },\n  {\n    title: \"Grid Navigation Game\",\n    image: \"placeholder-grid\",\n    description:\n      \"Tile-based movement game with win/lose conditions and timed random tile spawns.\",\n  },\n  {\n    title: \"Platformer Collectathon\",\n    image: \"placeholder-platformer\",\n    description:\n      \"Arrow-key controlled platformer with score-boosting collectibles and enemies.\",\n  },\n];\n\nconst miniWebApps = [\n  {\n    title: \"User Management System\",\n    image: \"placeholder-user\",\n    description:\n      \"React app using React Query for real-time user listing, form validation, and toast notifications.\",\n  },\n  {\n    title: \"Election Survey App\",\n    image: \"placeholder-election\",\n    description:\n      \"Survey app for simulating U.S. election votes. Users select candidates, submit, and view results.\",\n  },\n  {\n    title: \"Restaurant Website\",\n    image: \"placeholder-food\",\n    description:\n      \"Multi-page responsive site with menus, nutrition info, contact form, and location details.\",\n  },\n];\n\nconst miniWeb3Projects = [\n  {\n    title: \"Dojo Engine Game\",\n    image: \"placeholder-dojo\",\n    description:\n      \"Blockchain-based game using Dojo + Starknet. Movement, wallet integration, and on-chain position updates.\",\n  },\n  {\n    title: \"Web3 Auth App\",\n    image: \"placeholder-auth\",\n    description:\n      \"Simple DApp with account creation, login, and protected route display inside a mock game interface.\",\n  },\n];\n\nconst ExpandableProject = ({ project }) => {\n  const [expanded, setExpanded] = useState(false);\n\n  return (\n    <div className=\"bg-white rounded-2xl shadow-md p-4 flex flex-col\">\n      <img\n        src={project.image}\n        alt={project.title}\n        className=\"rounded-xl mb-4 object-cover h-48 w-full\"\n      />\n      <h2 className=\"text-xl font-semibold mb-2\">{project.title}</h2>\n      <p\n        className={`text-sm text-gray-700 whitespace-pre-line mb-4 ${\n          expanded ? \"\" : \"line-clamp-6\"\n        }`}\n      >\n        {project.description}\n      </p>\n      <button\n        onClick={() => setExpanded(!expanded)}\n        className=\"text-blue-600 text-sm hover:underline mb-2\"\n      >\n        {expanded ? \"Show Less\" : \"Read More\"}\n      </button>\n      {project.github && (\n        <a\n          href={project.github}\n          className=\"text-sm bg-gray-200 px-3 py-1 rounded hover:bg-gray-300 self-start\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          GitHub\n        </a>\n      )}\n    </div>\n  );\n};\n\nconst MiniProjectCard = ({ project }) => (\n  <div className=\"bg-white rounded-2xl shadow-md p-4 flex flex-col\">\n    <img\n      src={project.image}\n      alt={project.title}\n      className=\"rounded-xl mb-4 object-cover h-40 w-full\"\n    />\n    <h2 className=\"text-lg font-semibold mb-1\">{project.title}</h2>\n    <p className=\"text-sm text-gray-600\">{project.description}</p>\n  </div>\n);\n\nexport default function ProjectsPage() {\n  return (\n    <div className=\"p-4 max-w-screen-xl mx-auto\">\n      <h1 className=\"text-4xl font-bold mb-10 text-center\">Projects</h1>\n\n      {/* === MAIN PROJECTS === */}\n      <section>\n        <h2 className=\"text-2xl font-semibold mb-6\">Main Projects</h2>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\">\n          {mainProjects.map((project, index) => (\n            <ExpandableProject key={index} project={project} />\n          ))}\n        </div>\n      </section>\n\n      {/* === MINI PROJECTS === */}\n      <section>\n        <h2 className=\"text-2xl font-semibold mb-4\">Mini Projects</h2>\n        <p className=\"text-gray-600 mb-6\">\n          A mix of smaller creative experiments and focused technical builds across game dev, frontend, and blockchain.\n        </p>\n\n        {/* Game Dev */}\n        <h3 className=\"text-xl font-semibold mb-4\">🎮 Game Development</h3>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 mb-10\">\n          {miniGameProjects.map((project, i) => (\n            <MiniProjectCard key={i} project={project} />\n          ))}\n        </div>\n\n        {/* Web Apps */}\n        <h3 className=\"text-xl font-semibold mb-4\">💻 Web Applications</h3>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 mb-10\">\n          {miniWebApps.map((project, i) => (\n            <MiniProjectCard key={i} project={project} />\n          ))}\n        </div>\n\n        {/* Web3 */}\n        <h3 className=\"text-xl font-semibold mb-4\">🔗 Blockchain & Web3</h3>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {miniWeb3Projects.map((project, i) => (\n            <MiniProjectCard key={i} project={project} />\n          ))}\n        </div>\n      </section>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}